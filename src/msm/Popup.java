/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package msm;

import com.sun.awt.AWTUtilities;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import msm.sounds.Sounds;

/**
 *
 * @author mgalvao3
 */
public class Popup extends javax.swing.JFrame {

    private int windowX;
    private int windowY;
    private final Sounds.SoundName mSound;
    private static int POPUP_SPEED = 3;
    private PopupListener mListener;
    private String mIP;

    /**
     * Creates new form Popup
     */
    public Popup(String line1, String line2, Sounds.SoundName sound) {
        initComponents();
        
        jLabel1.setText(line1);
        jLabel2.setText(line2);
        
        avatar.setIcon(new ImageIcon("images/avatar_empty.jpg"));
        
        jPanelHeader1.setImage("images/popup.png");
        AWTUtilities.setWindowShape(this, new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 15, 15));
        
        mSound = sound;
        
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int) rect.getMaxX() - 201;
        int y = (int) rect.getMaxY() - 116;
        setBaseLocation(x, y);
    }
    
    public void setIp(String ip) {
        mIP = ip;
    }
    
    public void setOnClickListener(PopupListener l) {
        mListener = l;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader1 = new msm.components.JPanelHeader();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        avatar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setUndecorated(true);
        setResizable(false);

        jPanelHeader1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelHeader1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel1.setText("????");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel2.setText("acabou de entrar");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabelClose.setText(" ");
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        avatar.setBackground(new java.awt.Color(204, 204, 204));
        avatar.setSize(new java.awt.Dimension(46, 46));

        javax.swing.GroupLayout jPanelHeader1Layout = new javax.swing.GroupLayout(jPanelHeader1);
        jPanelHeader1.setLayout(jPanelHeader1Layout);
        jPanelHeader1Layout.setHorizontalGroup(
            jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabelClose, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelHeader1Layout.setVerticalGroup(
            jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addComponent(jLabelClose, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHeader1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHeader1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        if(timerOut == null) {
            fadeOut();
        }
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jPanelHeader1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelHeader1MouseClicked
        if(mListener != null && !"".equals(mIP)) {
            mListener.OnPopupClicked(mIP);
        }
    }//GEN-LAST:event_jPanelHeader1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelClose;
    private msm.components.JPanelHeader jPanelHeader1;
    // End of variables declaration//GEN-END:variables

    int width = this.getWidth();
    int height = 1;
    int maxHeigth = this.getHeight();
    Timer timerIn;
    Timer timerOut;
    Timer timerWait;
        
    public void fadeIn() {
        
        Point location = new Point(getLocation());
        
        width = this.getWidth();
        height = 1;
        maxHeigth = this.getHeight();
        
        this.setSize(width, height);
        this.setLocation(windowX, windowY + maxHeigth);
        this.setVisible(true);

        Sounds.play(mSound);

        timerIn = new Timer(POPUP_SPEED, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(height < maxHeigth) {
                    height++;
                    Popup.this.setSize(width, width);
                    Popup.this.setLocation(windowX, windowY + (maxHeigth - height));
                    
                    //System.out.println("Size= " + width + "," + height);
                    
                    Popup.this.repaint();
                } else {
                    timerIn.stop();
                    timerWait.setRepeats(false);
                    timerWait.start();
                }
            }
        });
        
        timerIn.setRepeats(true);
        timerIn.start();
        
        timerWait = new Timer(5000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(timerOut == null) {
                    fadeOut();
                }
            }
        });
        
        
    }
    
    public void fadeOut() {
        timerOut = new Timer(POPUP_SPEED, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(height > 0) {
                    height--;
                    Popup.this.setSize(width, width);
                    Popup.this.setLocation(windowX, windowY + (maxHeigth - height));

                    //System.out.println("Size= " + width + "," + height);

                    Popup.this.repaint();
                } else {
                    dispose();
                }
            }
        });
        timerOut.setRepeats(true);
        timerOut.start();
    }
    

    public void setBaseLocation(int x, int y) {
        this.windowX = x;
        this.windowY = y;
        setLocation(x, y);
    }
    
    public interface PopupListener {
        void OnPopupClicked(String userIp);
    }
}
