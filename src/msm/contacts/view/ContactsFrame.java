/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package msm.contacts.view;

import msm.contacts.presenter.ContactsPresenter;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.io.StreamCorruptedException;
import java.net.ConnectException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import msm.AddContact;
import msm.Message;
import msm.Popup;
import msm.base.BaseFrame;
import msm.communication.Client;
import msm.communication.Server;
import msm.communication.model.Ping;
import msm.components.ListEntryCellRenderer;
import msm.dao.AppPreferences;
import msm.model.ListEntry;
import msm.model.Status;
import msm.model.StatusIcons;
import msm.sounds.Sounds;

/**
 *
 * @author mgalvao3
 */
public class ContactsFrame extends BaseFrame<ContactsPresenter> implements ContactsView {

    private Status myStatus = Status.ONLINE;

    @Override
    protected ContactsPresenter createPresenter() {
        return new ContactsPresenter(this);
    }
    
    /**
     * Creates new form Contacts
     */
    public ContactsFrame() {
        initComponents();

        jPanelHeader1.setImage("images/header.jpg");
        this.getContentPane().setBackground(Color.decode("#dbe9f2"));
        avatar.setIcon(new ImageIcon("images/avatar_empty.jpg"));
        System.out.println("constructor called");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        labelOnlineCount = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelOfflineCount = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listOffline = new javax.swing.JList<>();
        jPanelHeader1 = new msm.components.JPanelHeader();
        jLabel2 = new javax.swing.JLabel();
        labelNick = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addContact = new javax.swing.JLabel();
        avatar = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listOnline = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(77, 99, 134));
        jLabel3.setText("Disponível");

        labelOnlineCount.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        labelOnlineCount.setForeground(new java.awt.Color(184, 196, 214));
        labelOnlineCount.setText("(0)");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(77, 99, 134));
        jLabel5.setText("Offline");

        labelOfflineCount.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        labelOfflineCount.setForeground(new java.awt.Color(184, 196, 214));
        labelOfflineCount.setText("(0)");

        listOffline.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        listOffline.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listOffline);

        jPanelHeader1.setPreferredSize(new java.awt.Dimension(230, 93));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 2, 11)); // NOI18N
        jLabel2.setText("Compartilhe seu status");

        labelNick.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelNick.setText("Sem Nome (Disponível)");
        labelNick.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelNickMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        jLabel7.setText("▼");

        addContact.setIcon(new ImageIcon("images/add_contact.png"));
        addContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addContactMouseClicked(evt);
            }
        });

        avatar.setBackground(new java.awt.Color(204, 204, 204));
        avatar.setSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout jPanelHeader1Layout = new javax.swing.GroupLayout(jPanelHeader1);
        jPanelHeader1.setLayout(jPanelHeader1Layout);
        jPanelHeader1Layout.setHorizontalGroup(
            jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHeader1Layout.createSequentialGroup()
                        .addComponent(labelNick)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHeader1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );
        jPanelHeader1Layout.setVerticalGroup(
            jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelHeader1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNick)
                    .addComponent(jLabel7))
                .addGroup(jPanelHeader1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHeader1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeader1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))))
        );

        listOnline.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        listOnline.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOnlineMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listOnline);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelOnlineCount))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelOfflineCount)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelOnlineCount))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelOfflineCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addContactMouseClicked
        AddContact window = new AddContact();
        window.setWindowClosedListener(new AddContact.WindowClosedListener() {
            @Override
            public void onWindowClosed() {
                mPresenter.readContactsFromDisk();
                mPresenter.refreshContacts();
            }
        });
        window.show();
    }//GEN-LAST:event_addContactMouseClicked

    private void labelNickMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelNickMouseClicked
        AppPreferences prefs = new AppPreferences();
        String name = JOptionPane.showInputDialog(ContactsFrame.this, "Digite seu nome:");
        if(name.length() > 3) {
            mPresenter.setUserName(name);
        }

    }//GEN-LAST:event_labelNickMouseClicked

    private void listOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOnlineMouseClicked
        if (evt.getClickCount() == 2) {
            int index = listOnline.locationToIndex(evt.getPoint());
            if(index > -1) {
                ListModel model = listOnline.getModel();
                ListEntry element = (ListEntry) model.getElementAt(index);
                String item = element.toString();
                String contactIp = item.substring(item.lastIndexOf('[') + 1, item.lastIndexOf(']'));
                String name = item.substring(0, item.lastIndexOf(" [") + 1);
                
                mPresenter.openMessage(contactIp, name);
            }
        }
    }//GEN-LAST:event_listOnlineMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addContact;
    private javax.swing.JLabel avatar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private msm.components.JPanelHeader jPanelHeader1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelNick;
    private javax.swing.JLabel labelOfflineCount;
    private javax.swing.JLabel labelOnlineCount;
    private javax.swing.JList<String> listOffline;
    private javax.swing.JList<String> listOnline;
    // End of variables declaration//GEN-END:variables
    
    private String translateStatus(Status status) {
        switch(status) {
            case ONLINE:
                return "Online";
            case AWAY:
                return "Ausente";
            case BUSY:
                return "Ocupado";
            case OFFLINE:
                return "Offline";
        }
        
        return "";
    }

    @Override
    public void setUserName(String name) {
        labelNick.setText(name + " (" + translateStatus(myStatus) + ")");
    }

    @Override
    public void openMessageWindow(String contactIp, String name) {
        Message m = new Message(contactIp, name, mPresenter.getMyName());
        m.setLocationRelativeTo(null);
        m.setVisible(true);
        mPresenter.addWindowToList(m);
        mPresenter.addWindowListeners(m, contactIp);
    }

    @Override
    public void setOfflineList(DefaultListModel dlmOffline) {
        listOffline.setModel(dlmOffline);
        listOffline.setCellRenderer(new ListEntryCellRenderer());
        labelOfflineCount.setText("(" + dlmOffline.getSize() + ")");
    }

    @Override
    public void setOnlineList(DefaultListModel dlmOnline) {
        listOnline.setModel(dlmOnline);
        listOnline.setCellRenderer(new ListEntryCellRenderer());
        labelOnlineCount.setText("(" + dlmOnline.getSize() + ")");
    }

    public void setIp(String ip) {
        mPresenter.setIp(ip);
    }

    public void initServer() {
        mPresenter.readContactsFromDisk();
        mPresenter.refreshContacts();
        mPresenter.startServer();
        mPresenter.startPingContacts();
    }
}
