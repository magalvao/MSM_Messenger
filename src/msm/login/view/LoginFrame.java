/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package msm.login.view;

import java.awt.Color;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import msm.base.BaseFrame;
import msm.communication.IP;
import msm.communication.Server;
import msm.login.presenter.LoginPresenter;

/**
 *
 * @author mgalvao3
 */
public class LoginFrame extends BaseFrame<LoginPresenter> implements LoginView {

    private LoginSucessfullListener mLoginListener;

    @Override
    protected LoginPresenter createPresenter() {
        return new LoginPresenter(this);
    }
    
    /**
     * Creates new form Login
     */
    public LoginFrame() {
        initComponents();
        mPresenter.setUpWindow();
    }
    
    public void setLoginSucessfullListener(LoginSucessfullListener l) {
        mLoginListener = l;
    }
    
    @Override
    public void populateIPs(List<String> ips) {
        ipAddress.addItem("");

        for(String ip : ips) {
            ip = ip.substring(1);
            
            if(IP.isValid(ip)) {
                ipAddress.addItem(ip);
            }
        }
    }

    @Override
    public void showIpError() {
        JOptionPane.showMessageDialog(this, "IP incorreto!");
    }

    @Override
    public void loginSuccessfull(String userIp) {
        mLoginListener.onLoginSucessfull(userIp);
    }

    @Override
    public void setBackgroundColor(String bgColor) {
        this.getContentPane().setBackground(Color.decode(bgColor));
    }

    @Override
    public void setAvatarIcon(String imagePath) {
        avatar.setIcon(new ImageIcon(imagePath));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        avatar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        enterButton = new javax.swing.JButton();
        ipAddress = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(236, 246, 249));

        avatar.setBackground(new java.awt.Color(204, 204, 204));
        avatar.setSize(new java.awt.Dimension(50, 50));

        jLabel1.setText("Endere√ßo de IP:");

        enterButton.setText("Entrar");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        ipAddress.setEditable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ipAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        mPresenter.onEnterClicked(ipAddress.getSelectedItem().toString());
    }//GEN-LAST:event_enterButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatar;
    private javax.swing.JButton enterButton;
    private javax.swing.JComboBox<String> ipAddress;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public interface LoginSucessfullListener {
        void onLoginSucessfull(String ipLogin);
    }
}
